/**
 * @file EventHandler.h
 * @author John Nguyen, Joshua Goldberg (jvn1567@gmail.com, J.GOLDBERG4674@edmail.edcc.edu)
 * @brief Utility functions for facilitating interactions, updating aliens'
 * population and spawning spaceships.
 * @version 0.1
 * @date 2021-06-12
 * 
 * @copyright Copyright (c) 2021
 * 
 */

#ifndef _EventHandler_h
#define _EventHandler_h

#include <string>
#include <vector>
#include "SpaceObject.h"
#include "AlienBase.h"
#include "Spaceship.h"
#include "Planet.h"

/**
 * @brief Facilitates colonization of a planet. There are three scenarios that
 * can occur while a spaceship is exploring:
 *  1) spaceship encounters empty planet: immediately colonizes.
 *  2) spaceship encounters occupied enemy planet: battle occurs between the two
 *    aliens; if the spaceship wins, it colonizes the planet, otherwise the occupants
 *    remain on the planet and the spaceship explodes.
 *  3) spaceship encounters friendly planet or star: no action occurs.
 * 
 * @param spaceObject A SpaceObject, which can be a planet or star.
 * @param ship The ship that is encountering the SpaceObject.
 * @return int 0 = no action, 1 = planet occupants win, 2 = ship colonizes.
 */
int interactSpaceObject(SpaceObject* spaceObject, SpaceObject* ship);

/**
 * @brief Facilitates battle between two spaceships.
 * 
 * @param ship1 
 * @param ship2 
 * @return int 0 = no fight, 1 = ship1 wins, 2 = ship2 wins.
 */
int interactShips(SpaceObject* ship1, SpaceObject* ship2);

/**
 * @brief Increases population of a planet until it reaches the max capacity.
 * 
 * @param spaceObject Planet.
 * @param occupant Aliens occupying planet.
 * @return true Full planet.
 * @return false Not full planet.
 */
bool updatePopulation(SpaceObject* spaceObject, AlienBase* occupant);

/**
 * @brief Spawns a spaceship if planet has reached max population.
 * 
 * @param occupant The alien occupying the planet.
 * @param spaceship The spaceship, to be generated by the alien.
 */
void sendShip(AlienBase* occupant, SpaceObject** spaceship);

#endif